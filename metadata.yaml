name: apache
title: Apache collector
overview:
  application:
    description: |
      Apache is an open-source HTTP server for modern operating systems including UNIX and Windows.
  collector:
    description: |
      This collector will collect metrics directly exposed by one or more Apache servers, depending on your configuration. 
      We recommend to also monitor Apache as a process, using the [apps.plugin](https://github.com/netdata/netdata/blob/master/collectors/apps.plugin/README.md) and also monitor Apache's logs through the [weblog collector](https://github.com/netdata/go.d.plugin/blob/master/modules/weblog/README.md).

      The collector will also autodetect any default Apache server running on port PORT
setup:
  prerequisites:
    list:
      - title: Enabling your Apache server
        text: |
          - Ensure the [Apache status module](https://httpd.apache.org/docs/2.4/mod/mod_status.html) is enabled and configured for Apache instance.
          - Ensure the Apache status module endpoint (default `server-status`) is available from the host containing the Apache integration.
  configuration:
    options:
      description: |
        The following options can be defined globally: update_every, autodetection_retry.
      folding:
        title: All options
        enabled: true
      list:
        - name: update_every
          description: Data collection frequency.
          default: 1
          required: no
        - name: autodetection_retry
          description: Re-check interval in seconds. Zero means not to schedule re-check.
          default: 0
          required: no
        - name: url
          description: Server URL.
          default: "`http://127.0.0.1/server-status?auto`"
          required: yes
        - name: timeout
          description: HTTP request timeout.
          default: 1
          required: no
        - name: username
          description: Username for basic HTTP authentication.
          default: "-"
          required: no
        - name: password
          description: Password for basic HTTP authentication.
          default: "-"
          required: no
        - name: proxy_url
          description: The Proxie's URL.
          default: "-"
          required: no
        - name: proxy_username
          description: Username for proxy basic HTTP authentication.
          default: "-"
          required: no
        - name: proxy_password
          description: Password for proxy basic HTTP authentication.
          default: "-"
          required: no
        - name: method
          description: HTTP request method.
          default: "GET"
          required: no
        - name: body
          description: HTTP request body.
          default: "-"
          required: no
        - name: headers
          description: HTTP request headers.
          default: "-"
          required: no
        - name: not_follow_redirects
          description: Whether to not follow redirects from the server.
          default: no
          required: no
        - name: tls_skip_verify
          description: Whether to skip verifying server's certificate chain and hostname.
          default: no
          required: no
        - name: tls_ca
          description: Certificate authority that client use when verifying server certificates.
          default: "-"
          required: no
        - name: tls_cert
          description: Client tls certificate.
          default: "-"
          required: no
        - name: tls_key
          description: Client tls key.
          default: "-"
          required: no
    examples:
      list:
        - name: Basic
          description: An example configuration.
          folding:
            title: Example
            enabled: true
          data: |
            jobs:
              - name: local
                url: http://127.0.0.1/server-status?auto
        - name: Basic HTTP auth
          description: Local server with basic HTTP authentication.
          folding:
            title: Example
            enabled: true
          data: |
            jobs:
              - name: local
                url: https://127.0.0.1/server-status?auto
                username: foo
                password: bar
        - name: Multi-instance
          description: When you are defining more than one jobs, you must be careful to use different job names, to not override each other.
          folding:
            title: Example
            enabled: true
          data: |
            jobs:
              - name: local
                http://127.0.0.1/server-status?auto
              
              - name: remote
                http://192.0.2.0/server-status?auto
troubleshooting:
  problems:
    list: []
metrics:
  folding:
    title: Metrics
    enabled: false
  description: TBD
  scope:
    - name: global
      description: TBD
      labels: []
      metrics:
        - name: apache.connections
          description: This metric shows the total number of connections to your Apache
            server, helping to measure the overall demand on your server.
          unit: connections
          dimensions:
            - name: connections
        - name: apache.conns_async
          description: This metric monitors the state of asynchronous connections,
            allowing you to identify potential bottlenecks or server capacity issues.
          unit: connections
          dimensions:
            - name: keepalive
            - name: closing
            - name: writing
        - name: apache.workers
          description: This metric tracks the number of idle and busy worker threads,
            helpful in identifying if your server has enough capacity to handle requests.
          unit: workers
          dimensions:
            - name: idle
            - name: busy
        - name: apache.scoreboard
          description: This metric provides a granular view of what each worker is
            doing, beneficial for identifying performance issues patterns.
          unit: connections
          dimensions:
            - name: waiting
            - name: starting
            - name: reading
            - name: sending
            - name: keepalive
            - name: dns_lookup
            - name: closing
            - name: logging
            - name: finishing
            - name: idle_cleanup
            - name: open
        - name: apache.requests
          description: This metric records the number of requests per second, useful
            for tracking the load on your server.
          unit: requests/s
          dimensions:
            - name: requests
        - name: apache.net
          description: This metric monitors the bandwidth used by Apache, essential
            for understanding your server's usage patterns and ensuring sufficient
            network capacity.
          unit: kilobit/s
          dimensions:
            - name: sent
        - name: apache.reqpersec
          description: This metric records the lifetime average number of requests
            per second, useful for understanding the average load on your server and
            for long-term capacity planning.
          unit: requests/s
          dimensions:
            - name: requests
        - name: apache.bytespersec
          description: This metric represents the lifetime average number of bytes
            served per second, helping to understand the data serving rate of your
            server.
          unit: KiB/s
          dimensions:
            - name: served
        - name: apache.bytesperreq
          description: This metric shows the average response size over the lifetime
            of the Apache server, helpful to understand the efficiency of your server.
          unit: KiB
          dimensions:
            - name: size
        - name: apache.uptime
          description: This metric indicates the total time for which the Apache server
            has been running, useful in detecting any unscheduled downtimes or server
            crashes and provides an indicator of overall server stability.
          unit: seconds
          dimensions:
            - name: uptime
